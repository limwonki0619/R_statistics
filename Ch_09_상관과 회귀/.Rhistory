plot(lm(ex1))
par(mfrow=c(2,2))
plot(lm(s ~ f, data=ex1))
par(mfrow=c(2,2))
plot(lm(s ~ f, data=ex1))
ex1_lm <- lm(s~f, data=ex1)
plot(lm(ex1_lm))
par(mfrow=c(2,2))
plot(lm(ex1_lm))
par(mfrow=c(1,1))
# 2. 회귀모형 검정
summary(ex1_lm)
cor(ex1$s, ex1$f)
# 2. 회귀모형 검정
summary(ex1_lm)
# 2. 회귀모형 검정
summary(ex1_lm)
# 2. 회귀모형 검정
summary(ex1_lm)
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
165*0.2
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
165*0.2
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
165*0.2
165*0.2
146.6+33
# 아들의 키가 아버지의 키에 영향을 받는지 알아보기 아들의 키를 종속변수, 아버지의 키를 독립변수로 설정하고 단순회귀분석을 실시했다.
summary(ex1_lm)
ex2 <- data.frame(소득 = c(100, 200, 300, 400, 500),
카드사용량 = c(30, 70, 85, 140, 197))
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw()
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw()
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw()
ggplot(ex1, aes(x=f, y=s)) +
geom_point()
ex1
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
library(ggplot2)
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw()
ggplot(ex1, aes(x=f, y=s)) +
geom_point()
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw()
ggplot(ex1, aes(x=f, y=s)) +
geom_point()
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
plot(ex1)
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
par(mfrow=c(1m1))
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
par(mfrow=c(1,1))
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw()
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw() +
labs(x = "아버지의 키", y="아들의 키", main = "아버지의 키와 아들의 키 산점도 및 회귀선")
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw() +
labs(x = "아버지의 키", y="아들의 키", title = "아버지의 키와 아들의 키 산점도 및 회귀선")
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw(base_family = "hanna") +
labs(x = "아버지의 키", y="아들의 키", title = "아버지의 키와 아들의 키 산점도 및 회귀선")
library(extrafont)
library(extrafont)
windowsFonts(dohyeon=windowsFont("BM DoHyeon"))
windowsFonts(jalnan=windowsFont("Jalnan"))
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키", y="아들의 키", title = "아버지의 키와 아들의 키 산점도 및 회귀선")
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
ggplot(ex1, aes(x=f, y=s)) +
geom_point() +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키", y="아들의 키", title = "아버지의 키와 아들의 키 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
ggplot(ex1, aes(x=f, y=s)) +
geom_point(size=2) +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키", y="아들의 키", title = "아버지의 키와 아들의 키 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
# 회귀모형은 유의수준 5%에서 F 통계량 값이 23.08(p=0.017)로 통계적으로 유의하며,
# 회귀식에 대한 결정계수(R^2)은 0.885로 88.5%의 설명력을 보인다.
# 또한 독립변수인 아버지의 키(f)는 t 검정통계량 4.884(p=0.017)으로 통계적으로 유의미한 영향을 준다.
# 따라서 회귀모형의 추정식은 '아들의 키(cm) = 146.6 + 0.2*아버지의 키(cm)'이고,
# 아버지의 키가 165cm 일 때 아들의 키는 179.6(cm)으로 예측할 수 있다.
ggplot(ex1, aes(x=f, y=s)) +
geom_point(size=2) +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ex2 <- data.frame(소득 = c(100, 200, 300, 400, 500),
카드사용량 = c(30, 70, 85, 140, 197))
cor(ex2$소득, ex2$카드사용량) # 아주 강한 상관관계가 있다.
ex2_lm <- lm(카드사용량~소득, data=ex2)
ex2_lm <- lm(카드사용량~소득, data=ex2)
par(mfrow=c(2,2))
plot(lm(ex2_lm))
par(mfrow=c(1,1))
# 카드사용량이 소득에 영향을 받는지 알아보기 카드사용량을 종속변수, 소득을 독립변수로 설정하고 단순회귀분석을 실시했다.
summary(ex2_lm)
0.404*30
0.404*30
0.404*100
c(seq(100,500,100))*0.404
# 회귀모형은 유의수준 5%에서 F 통계량 값이 79.54(p=0.00297)로 통계적으로 유의하며
# 회귀식에 대한 결정계수(R^2)는 0.9637로 96.37%의 설명력을 보인다.
# 또한 독립변수인 소득은 t 검정통계량 8.919(p=0.00297)으로 통계적으로 유의미한 영향을 주며
# 소득의 1단위당 카드사용량에 0.404(만원)의 양의 영향을 주는 것으로 나타났다.
# 다만 y절편은 t 검정통계량 -1.118(0.34495)으로 통계적으로 유의하지 않아 회귀모형에서 제외되었다.
# 따라서 회귀모형의 추정식은 '카드사용량(만원) = 0.404*소득(만원)'이고,
# 소득이 250(만원)일 때 카드사용량은
0.404*250
0.404*250
# 소득이 카드사용량에 영향을 주는지 알아보기 위해 카드사용량을 종속변수, 소득을 독립변수로 설정하고 단순회귀분석을 실시했다.
summary(ex2_lm)
ggplot(ex2, aes(x=소득, y=카드사용량)) +
geom_point(size=2) +
geom_smooth(method = lm, color="oliverab") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex2, aes(x=소득, y=카드사용량)) +
geom_point(size=2) +
geom_smooth(method = lm, color="oliverab") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
par(mfrow=c(1,1))
ggplot(ex2, aes(x=소득, y=카드사용량)) +
geom_point(size=2) +
geom_smooth(method = lm, color="oliverab") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex1, aes(x=f, y=s)) +
geom_point(size=2) +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex1, aes(x=f, y=s)) +
geom_point(size=2) +
geom_smooth(method = lm, color="orange") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
par(mfrow=c(2,2))
plot(lm(ex1_lm))
par(mfrow=c(1,1))
plot(lm(ex1_lm))
ggplot(ex2, aes(x=소득, y=카드사용량)) +
geom_point(size=2) +
geom_smooth(method = lm, color="oliverab") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex2, aes(x=소득, y=카드사용량)) +
geom_point(size=2) +
geom_smooth(method = lm, color="deepskyblue") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "아버지의 키(cm)", y="아들의 키(cm)", title = "아버지의 키와 아들의 키의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex2, aes(x=소득, y=카드사용량)) +
geom_point(size=2) +
geom_smooth(method = lm, color="deepskyblue") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "소득(만원)", y="카드사용량(만원)", title = "소득과 카드사용량의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
### **문제 3.**
#### mtcars 데이터셋에서 배기량(disp)에 따른 마력(hp)의 회귀식을 구하시오.
str(mtcars)
library(dplyr)
ex3 <- mtcars %>% select(disp, hp)
ex3
cor(ex3$disp, ex3$hp)
ex3_lm <- lm(hp~disp, data=ex3)
par(mfrow=c(2,2))
plot(lm(ex3_lm))
shapiro.test(residuals(ex3_lm))
shapiro.test(residuals(ex3_lm)) # 정규성을 만족하지 않음..
# 배기량이 마력에 영향을 주는지 알아보기 위해 마력을 종속변수, 배기량을 독립변수로 설정하고 단순회귀분석을 실시했다.
summary(ex3_lm)
# 아버지의 키가 아들의 키에 영향을 주는지 알아보기 위해 아들의 키를 종속변수, 아버지의 키를 독립변수로 설정하고 단순회귀분석을 실시했다.
summary(ex1_lm)
# 배기량이 마력에 영향을 주는지 알아보기 위해 마력을 종속변수, 배기량을 독립변수로 설정하고 단순회귀분석을 실시했다.
summary(ex3_lm)
par(mfrow=c(1,1))
plot(lm(ex2_lm))
labs(x = "소득(만원)", y="카드사용량(만원)", title = "소득과 카드사용량의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex2, aes(x=소득, y=카드사용량)) +
geom_point(size=2) +
geom_smooth(method = lm, color="deepskyblue") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "소득(만원)", y="카드사용량(만원)", title = "소득과 카드사용량의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex3, aes(x=disp, y=hp)) +
geom_point(size=2) +
geom_smooth(method = lm, color="pink") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "배기량", y="마력", title = "배기량과 마력의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(ex3, aes(x=disp, y=hp)) +
geom_point(size=2) +
geom_smooth(method = lm, color="hotpink") + # 회귀선 및 신뢰구간
theme_bw(base_family = "dohyeon") +
labs(x = "배기량", y="마력", title = "배기량과 마력의 산점도 및 회귀선") +
theme(plot.title = element_text(hjust = 0.5))
boston
library(MASS)
data <- data("Boston", package = "MASS")
str(data)
data("Boston", package = "MASS")
data <- Boston
str(data)
# 모든 변수를 설명변수로 두고 최적의 모델을 찾아보자
library(leaps)
library(mlbench)
# 모든 변수를 설명변수로 두고 최적의 모델을 찾아보자
install.packages("mlbench")
# 모든 변수를 설명변수로 두고 최적의 모델을 찾아보자
library(leaps)
library(mlbench)
data("Boston", package = "MASS")
str(Boston)
# 모든 변수를 설명변수로 두고 최적의 모델을 찾아보자
library(leaps)
library(mlbench)
model <- regsubsets(medv ~ ., data=Boston)
summary(model)
plot(model, scale="adjr2")
plot(model, scale=c("adjr2","bic"))
plot(model, scale=c("adjr2","bic"))
plot(model, scale="adjr2")
plot(model, scale="bic")
summary(model)
plot(model, scale="adjr2")
plot(model, scale="bic")
par(mfrow = c(2,2))
plot(model, scale="adjr2")
plot(model, scale="bic")
par(mfrow = c(2,1))
plot(model, scale="adjr2")
plot(model, scale="bic")
par(mfrow = c(1,2))
plot(model, scale="adjr2")
plot(model, scale="bic")
plot(model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
plot(model, scale="bic", main = " BIC 값을 기준으로 결정한 최적모델")   # BIC 값을 기준으로 결정한 최적모델  (작을수록 좋은 모델)
selected_boston <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat)
str(selected_boston)
selected_boston <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
all.model <- regsubsets(medv ~ ., data=Boston) # 전체모델
summary(all.model)
par(mfrow = c(1,2))
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
plot(all.model, scale="bic", main = " BIC 값을 기준으로 결정한 최적모델")   # BIC 값을 기준으로 결정한 최적모델  (작을수록 좋은 모델)
selected_boston <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
str(selected_boston)
selected_model <- lm(medv ~ ., data=selected_boston)
plot(selected_model)
plot(selected_model)
par(mfrow=c(2,2))
plot(selected_model)
library(car)
install.packages("car")
library(car)
summary(gvima::gvlma(selected_model))
summary(gvlma::gvlma(selected_model))
summary(selected_model)
summary(selected_model)
par(mfrow=c(2,2))
plot(selected_model)
par(mfrow=c(1,1))
summary(gvlma::gvlma(selected_model))
selected_model <- lm(medv ~ ., data=selected_boston)
summary(selected_model)
library(gvlma)
install.packages("gvlma")
library(gvlma)
summary(gvlma::gvlma(selected_model))
# 정규성 검정
shapiro.test(selected_model$residuals)
summary(selected_model)
library(gvlma)
summary(gvlma::gvlma(selected_model))
# 다중공선성 문제
car::vif(selected_model)
# 다중공선성 문제
car::vif(selected_model)
# 다중공선성 문제
# - 독립변수들 간에 상관관계가 있는 것을 다중공선성이 있다고 한다
# - 회귀분석의 가정 : 다중공선성이 없어야 한다
# - VIF(Variance Inflation Factor : 분산팽창요인)
# - VIF 값이 10이상이면, 다중공선성이 존재한다고 판단한다.
# 회귀 모델의 설명 변수들 사이에 상관관계가 있는 경우가 있는데, 이것을 “다중공선성” 라고 한다.
# 다중공선성이 존재할 경우 모델의 정확도가 하락하게 되므로 어떤 두 변수 간에 다중 공선성이 존재할 경우 설명력이 더 적은 변수를 제거하고 모델을 재구성 한다.
# R에서는 vif 함수를 사용해 VIF값을 간단히 구할 수 있으며, 보통 VIF 값이 4가 넘으면 다중공선성이 존재한다고 본다.
car::vif(selected_model)
# 다중공선성 문제
# - 독립변수들 간에 상관관계가 있는 것을 다중공선성이 있다고 한다
# - 회귀분석의 가정 : 다중공선성이 없어야 한다
# - VIF(Variance Inflation Factor : 분산팽창요인)
# - VIF 값이 10이상이면, 다중공선성이 존재한다고 판단한다.
# 회귀 모델의 설명 변수들 사이에 상관관계가 있는 경우가 있는데, 이것을 “다중공선성” 라고 한다.
# 다중공선성이 존재할 경우 모델의 정확도가 하락하게 되므로 어떤 두 변수 간에 다중 공선성이 존재할 경우 설명력이 더 적은 변수를 제거하고 모델을 재구성 한다.
# R에서는 vif 함수를 사용해 VIF값을 간단히 구할 수 있으며, 보통 VIF 값이 4가 넘으면 다중공선성이 존재한다고 본다.
car::vif(selected_model)
summary(all.model)
summary(selected_model)
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
# 위 모델에서 오차항의 기본가정이 위배되어 두 번째 최적모델을 사용한다.
selected_boston <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat, medv)
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat, medv)
str(selected_boston2)
summary(selected_model)
selected_boston2 <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, lstat, medv)
str(selected_boston2)
selected_model2 <- lm(medv ~ ., data=selected_boston2)
summary(selected_model2)
summary(gvlma::gvlma(selected_model2))
all.model <- regsubsets(medv ~ ., data=Boston, nbest=4) # 전체모델
summary(all.model)
par(mfrow = c(1,2))
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
plot(all.model, scale="bic", main = " BIC 값을 기준으로 결정한 최적모델")   # BIC 값을 기준으로 결정한 최적모델  (작을수록 좋은 모델)
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat  medv)
str(selected_boston2)
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat,  medv)
str(selected_boston2)
selected_model2 <- lm(medv ~ ., data=selected_boston2)
summary(selected_model2)
summary(gvlma::gvlma(selected_model2))
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat,  medv)
str(selected_boston2)
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat,  medv)
str(selected_boston2)
selected_model2 <- lm(medv ~ ., data=selected_boston2)
summary(selected_model2)
summary(gvlma::gvlma(selected_model2))
car::vif(selected_model2) # 다중공선성의 문제는 없다.
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat,  medv)
# 위 모델에서 오차항의 기본가정이 위배되어 결정계수가 두 번째로 높은 모델을 선택
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, ptratio, black, lstat,  medv)
str(selected_boston2)
selected_model2 <- lm(medv ~ ., data=selected_boston2)
summary(selected_model2)
summary(gvlma::gvlma(selected_model2))
car::vif(selected_model2) # 다중공선성의 문제는 없다.
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
plot(all.model, scale="bic", main = " BIC 값을 기준으로 결정한 최적모델")   # BIC 값을 기준으로 결정한 최적모델  (작을수록 좋은 모델)
# 위 모델에서 오차항의 기본가정이 위배되어 결정계수가 두 번째로 높은 모델을 선택
selected_boston2 <- dplyr::select(Boston, chas, nox, rm, dis, rad, ptratio, black, lstat,  medv)
str(selected_boston2)
selected_model2 <- lm(medv ~ ., data=selected_boston2)
summary(selected_model2)
summary(gvlma::gvlma(selected_model2))
car::vif(selected_model2) # 다중공선성의 문제는 없다.
# 세 번째 모델..
selected_boston2 <- dplyr::select(Boston, crim, nox, rm, dis, rad, tax, ptratio, black, lstat, medv)
# 세 번째 모델..
selected_boston3 <- dplyr::select(Boston, crim, nox, rm, dis, rad, tax, ptratio, black, lstat, medv)
str(selected_boston3)
selected_model3 <- lm(medv ~ ., data=selected_boston3)
summary(selected_model3)
summary(gvlma::gvlma(selected_model3))
car::vif(selected_model3) # 다중공선성의 문제는 없다.
summary(gvlma::gvlma(selected_model)) # 검정결과 오차항의 기본 가정을 만족하지 못함.
summary(gvlma::gvlma(selected_model)) # 검정결과 오차항의 기본 가정을 만족하지 못함.
selected_model <- lm(medv ~ ., data=selected_boston)
summary(selected_model)
# 그래프로 보기
par(mfrow=c(2,2))
plot(selected_model)
par(mfrow=c(1,1))
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
summary(selected_model3)
# 결정계수가 3번째인 모델에서 영향력이 가장 낮은 black 변수를 제외한 모델 선택
selected_boston3 <- dplyr::select(Boston, crim, nox, rm, dis, rad, tax, ptratio, lstat, medv)
selected_model3 <- lm(medv ~ ., data=selected_boston3)
summary(selected_model3)
summary(gvlma::gvlma(selected_model3))
car::vif(selected_model3) # 다중공선성의 문제는 없다.
summary(gvlma::gvlma(selected_model3)) # 그래도 기본가정에는 위배..
car::vif(selected_model3) # 다중공선성의 문제는 없다.
selected_model <- lm(medv ~ ., data=selected_boston)
summary(selected_model)
# 2. 회귀모델 검정
summary(selected_model)
# 2. 회귀모델 검정 (기본가정이 충족된다는 가정하에서...)
summary(selected_model)
# 2. 회귀모델 검정 (기본가정이 충족된다는 가정하에서...)
summary(selected_model)
# 2. (기본가정이 충족된다는 가정하에서...) 회귀모델 검정 및 결론
summary(selected_model)
# 3. (기본가정이 충족된다는 가정하에서... 첫번째 모델의) 회귀모델 검정 및 결론
summary(selected_model)
selected_boston <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
str(selected_boston)
selected_model <- lm(medv ~ ., data=selected_boston)
# 3. (기본가정이 충족된다는 가정하에서... 첫번째 모델의) 회귀모델 검정 및 결론
summary(selected_model)
str(selected_boston)
selected_boston$chas <- factor(selected_boston$chas)
str(selected_boston)
str(selected_boston)
selected_boston <- dplyr::select(Boston, zn, nox, rm, dis, ptratio, black, lstat, medv)
str(selected_boston)
selected_model <- lm(medv ~ ., data=selected_boston)
# 그래프로 보기
par(mfrow=c(2,2))
plot(selected_model)
par(mfrow=c(1,1))
summary(gvlma::gvlma(selected_model)) # 검정결과 오차항의 기본 가정을 만족하지 못함.
selected_boston$chas <- factor(selected_boston$chas)
selected_boston <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
str(selected_boston)
selected_boston$chas <- factor(selected_boston$chas)
all.model <- regsubsets(medv ~ ., data=Boston, nbest=4) # 전체모델
summary(all.model)
par(mfrow = c(1,2))
plot(all.model, scale="adjr2", main = "adj R^2을 기준으로 결정한 최적모델") # adj R^2을 기준으로 결정한 최적모델 (클 수록 좋은 모델)
plot(all.model, scale="bic", main = " BIC 값을 기준으로 결정한 최적모델")   # BIC 값을 기준으로 결정한 최적모델  (작을수록 좋은 모델)
par(mfrow=c(1,1))
selected_boston <- dplyr::select(Boston, zn, chas, nox, rm, dis, ptratio, black, lstat, medv)
str(selected_boston)
selected_boston$chas <- factor(selected_boston$chas)
# 3. (기본가정이 충족된다는 가정하에서... 첫번째 모델의) 회귀모델 검정 및 결론
summary(selected_model)
