setwd("D:/limworkspace/R_Statistics/Ch_07_여러 모집단의 평균 비교 검정")
ad <- read.csv("data/age.data.csv")
str(ad)
ad$scale <- factor(ad$scale)
ad$sex <- factor(ad$sex)
str(ad)
# lm(종속변수 ~ 독립변수)
library(dplyr)
y1 <- filter(ad, scale=="1")
y1 <- filter(ad, scale=="1")
y2 <- filter(ad, scale=="2")
y3 <- filter(ad, scale=="3")
y1.mean <- mean(y1)
y1 <- filter(ad$age, scale=="1")
y2 <- filter(ad$age, scale=="2")
y3 <- filter(ad$age, scale=="3")
y <- mean(ad$age)
y.mean <- mean(ad$age)
sst.1 <- length(y1) + sum((y1.yeam - y.mean)^2)
sst.2 <- length(y2) + sum((y2.yeam - y.mean)^2)
sst.3 <- length(y3) + sum((y3.yeam - y.mean)^2)
y1 <- ad$age[ad$scale == "1"]
y2 <- ad$age[ad$scale == "2"]
y3 <- ad$age[ad$scale == "3"]
y1
ad$age
ad$scale <- factor(ad$scale)
ad$sex <- factor(ad$sex)
str(ad)
y1 <- ad$age[ad$scale == "1"]
y2 <- ad$age[ad$scale == "2"]
y3 <- ad$age[ad$scale == "3"]
y1.mean <- mean(y1)
y2.mean <- mean(y2)
y3.mean <- mean(y3)
sse.1 <- sum((y1 - y1.mean)^2)
sse.2 <- sum((y2 - y2.mean)^2)
sse.3 <- sum((y3 - y3.mean)^2)
sse <- sse.1 + sse.2 + sse.3
df.e <- (length(y1)-1) + (length(y2)-1) +(length(y3)-1)
y.mean <- mean(ad$age)
sst.1 <- length(y1) + sum((y1.mean - y.mean)^2)
sst.2 <- length(y2) + sum((y2.mean - y.mean)^2)
sst.3 <- length(y3) + sum((y3.mean - y.mean)^2)
sst <- sst.1 + sst.2 + sst.3
df.t <- length(levels(ad$scale)) - 1
mst <- sst/df.t
mse <- sse/df.e
f <- mst/mse
qf(0.95, 2,147)
tol <- qf(1-0.05,2,147)
tol
p_value <- 1-pf(f, 2, 147)
p_value
p_value <- 1-pf(f, 2, 147) # 유의확률 5%에서 우측 검정시 유의확률
p_value
ow <- lm(age~scale, data=ad)
anova(ow)
setwd("D:/limworkspace/R_Statistics/Ch_08_범주형 자료분석")
# R로 구하기
x <- c(315, 101, 108, 32)
chisq.test(x, p=c(9,3,3,1)/16)
axis_x <- seq(0,4,by=0.01)
data <- data.frame(x=axis_x,
y=dchisq(x,df=3))
data <- data.frame(x=axis_x,
y=dchisq(axis_x,df=3))
data
library(ggplot2)
ggplot(data, aes(x=x,y=y))
data
ggplot(data, aes(x=x,y=y)) +
geom_line()
data <- data.frame(x=axis_x,
y=dchisq(axis_x,df=3))
library(ggplot2)
ggplot(data, aes(x=x,y=y)) +
geom_line()
axis_x <- seq(0,10,by=0.01)
data <- data.frame(x=axis_x,
y=dchisq(axis_x,df=3))
ggplot(data, aes(x=x,y=y)) +
geom_line()
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data[data$x > 0.47])
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data[data$x > 0.47,])
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data[data$x > 0.47,], fill="orange")
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], fill="orange")
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], fill="orange", alpha=0.2)
geom_area
?geom_area
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], fill="orange", alpha=0.2\)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], fill="orange", alpha=0.2)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_polygon(data=data[data$x > 0.47,], fill="orange", alpha=0.2, density=30)
?geom_area
?geom_polygon
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_polygon(data=data[data$x > 0.47,], fill="orange", alpha=0.2, linetype=1)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_polygon(data=data[data$x > 0.47,], fill="orange", alpha=0.2, linetype=2)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], fill="orange", alpha=0.2, linetype=2)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], fill="orange", alpha=0.2, linetype=3)
?geom_area
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=2)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > 2.14,], col="red")
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > 2.14,], fill="red", alpha=0.5)
data <- data.frame(x=axis_x,
y=dchisq(axis_x, df=3))
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > 2.14,], fill="red", alpha=0.5)
chisq.test(x, p=c(9,3,3,1)/16)
axis_x <- seq(0,15,by=0.01)
data <- data.frame(x=axis_x,
y=dchisq(axis_x, df=3))
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > 2.14,], fill="red", alpha=0.5)
data[data$x > 2.14,]
1-qchisq(2.14, df=3)
1-pchisq(2.14, df=3)
1-pchisq(0.470024, df=3)
qchisq(0.05, df=3)
qchisq(0.95, df=3)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > 7.81,], fill="red", alpha=0.5)
1-pchisq(7.18, df=3)
1-pchisq(7.81, df=3)
1-pchisq(0.470024, df=3)
qchisq(0.95, df=3)
qchisq(0.95, df=3)
qchisq(1-0.05, df=3)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > 2.14,], fill="red", alpha=0.5)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > 0.47,], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > 7.81,], fill="red", alpha=0.5)
qt(0.95, 3)
qt(0.95, 4)
qchisq(0.95, df=3)
qchisq(0.95, df=4)
qchisq(0.95, df=2)
qchisq(0.95, df=1)
qchisq(0.095, df=1)
qchisq(0.095, df=3)
sns.c <- read.csv("data/snsbyage.csv",header = T, stringsAsFactors = F)
sns.c
sns.c <- transform(sns.c, service.c =
factor(service, levels = c("F","T","K","C","E"), ordered = T))
sns.c
str(sns.c)
sns.c <- transform(sns.c, age =
factor(age, levels = c("20대","30대","40대"),ordered=T))
str(sns.c)
sns.c <- transform(sns.c, age.c =
factor(age, levels = c("20대","30대","40대"),ordered=T))
c.tab <- table(sns.c$age.c, sns.c$service.c)
a.n <- margin.table(c.tab, margin = 1)
s.n <- margin.table(c.tab, margin = 2)
s.p <- s.n / margin.table(c.tab)
expected <- a.n %*% t(s.p)
expected
c.tab <- table(sns.c$age.c, sns.c$service.c)
a.n <- margin.table(c.tab, margin = 1)
s.n <- margin.table(c.tab, margin = 2)
s.p <- s.n / margin.table(c.tab)
expected <- a.n %*% t(s.p)
expected
s.p
s.n
a.n
c.tab
sns.c <- read.csv("data/snsbyage.csv",header = T, stringsAsFactors = F)
sns.c <- transform(sns.c, service.c =
factor(service, levels = c("F","T","K","C","E"), ordered = T))
sns.c <- transform(sns.c, age.c =
factor(age, levels = c("20대","30대","40대"),ordered=T))
str(sns.c)
sns.c <- transform(sns.c, age.c =
factor(age, levels = c("1","2","3", labels = c("20대","30대","40대")),ordered=T))
str(sns.c)
c.tab <- table(sns.c$age.c, sns.c$service.c)
a.n <- margin.table(c.tab, margin = 1)
s.n <- margin.table(c.tab, margin = 2)
s.p <- s.n / margin.table(c.tab)
expected <- a.n %*% t(s.p)
expected
sns.c <- read.csv("data/snsbyage.csv",header = T, stringsAsFactors = F)
sns.c <- transform(sns.c, service.c =
factor(service, levels = c("F","T","K","C","E"), ordered = T))
sns.c <- transform(sns.c, age.c =
factor(age, levels = c("1","2","3"), labels = c("20대","30대","40대"),ordered=T))
str(sns.c)
c.tab <- table(sns.c$age.c, sns.c$service.c)
a.n <- margin.table(c.tab, margin = 1)
s.n <- margin.table(c.tab, margin = 2)
s.p <- s.n / margin.table(c.tab)
expected <- a.n %*% t(s.p)
expected
o.e <- c.tab-expected
t.t <- sum( (o.e)^2 / expected)
t.t
1-pchisq(t.t, df=8)
chisq.test(c.tab)
c.tab
qchisq(0.9254, df=3)
qchisq(1-0.9254, df=3)
qchisq(1-0.05, df=3)
qchisq(1-0.9254, df=3)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > qchisq(1-0.9254, df=3),], alpha=0.2, linetype=3) +
geom_area(data=data[data$x > qchisq(1-0.05, df=3),], fill="red", alpha=0.5)
ggplot(data, aes(x=x,y=y)) +
geom_line() +
geom_area(data=data[data$x > qchisq(1-0.9254, df=3),], alpha=0.2) +
geom_area(data=data[data$x > qchisq(1-0.05, df=3),], fill="red", alpha=0.5)
?geom_area
?geom_polygon
# 예제 3. 성별에 따른 대학원 입학 여부의 독립성 검정
data(UCBAdimissions)
# 예제 3. 성별에 따른 대학원 입학 여부의 독립성 검정
data(UCBAdmissions)
ucba.tab <- apply(UCBAdmissions, c(1,2), sum)
ucba.tab
UCBAdmissions
str(UCBAdmissions)
ucba.tab
round(prop.test(ucba.tab, margin=2) * 100, 1)
prop.test(ucba.tab, margin=2)
prop.test(ucba.tab)
ucba.tab <- apply(UCBAdmissions, c(1,2), sum)
chisq.test(ucba.tab, correct = F)
ucba.tab <- apply(UCBAdmissions, c(1,2), sum)
chisq.test(ucba.tab, correct = F) # 예이츠 보정의 목적은 통계적 유의성을 과대 평가하는 것을 막기 위한 것으로 (특히 표본수가 작은 경우) 기본이 보정을 하는 것으로 되어 있습니다. 만약 하지 않으려면 correct=F의 옵션을 주면 됩니다.
str(UCBAdmissions)
ucba.tab
c.tab <- table(sns.c$age.c, sns.c$service.c)
a.n <- margin.table(c.tab, margin = 1)
a.n
s.n <- margin.table(c.tab, margin = 2)
s.n
c.tab
qnorm(0.05)
qt(0.05,100)
qt(0.05,1000)
qnorm(0.05)
qt(0.05,1000)
qchisq(0.05,3)
qchisq(0.05,100)
qchisq(0.05,2)
qchisq(0.05,3)
qf(0.05,3,100)
data1 <- data.frame(x=seq(-3,3,0.01),
norm=dnorm(seq(-3,3,0.01)),
t=dt(seq(-3,3,0.01)))
data1 <- data.frame(x=seq(-3,3,0.01),
norm=dnorm(seq(-3,3,0.01)),
t=dt(seq(-3,3,0.01),3))
ggplot(data1, aes(x=x, y=norm)) +
geom_line()
qnorm(0.05)
ggplot(data1, aes(x=x, y=norm)) +
geom_line() +
geom_area(data=data1[data$x < qnorm(0.05),], fill="red", alpha=0.3)
ggplot(data1, aes(x=x, y=norm)) +
geom_line() +
geom_area(data=data1[data1$x < qnorm(0.05),], fill="red", alpha=0.3)
# R을 이용한 검정 - 직접계산
ad <- read.csv("data/age.data.csv")
str(ad)
str(ad)
ad
# 1. 가설설정
# H0 : 모든 호수의 산소량이 같다.
# H1 : 적어도 하나의 호수의 산소량이 다르다
호수_1 <- 1
호수_1
x <- data.frame(l1 <- c(5,7,6,8,6,7,8,8,6,10),
l2 <- c(6,8,9,11,13,12,10,8,9,10),
l3 <- c(14,25,26,18,19,22,21,16,20,30))
x
x <- data.frame(l1 = c(5,7,6,8,6,7,8,8,6,10),
l2 = c(6,8,9,11,13,12,10,8,9,10),
l3 = c(14,25,26,18,19,22,21,16,20,30))
x
# 1. 가설설정
# H0 : 모든 호수의 산소량이 같다.
# H1 : 적어도 하나의 호수의 산소량이 다르다
library(reshape)
x <- data.frame(l1 = c(5,7,6,8,6,7,8,8,6,10),
l2 = c(6,8,9,11,13,12,10,8,9,10),
l3 = c(14,25,26,18,19,22,21,16,20,30)) %>% melt()
x
ppm <- data.frame(l1 = c(5,7,6,8,6,7,8,8,6,10),
l2 = c(6,8,9,11,13,12,10,8,9,10),
l3 = c(14,25,26,18,19,22,21,16,20,30)) %>% melt()
lake <- lm(value ~ variable, data=ppm)
anova(lake)
library(dplyr)
ppm %>%
group_by(variable) %>%
summarise(mean = mean(variable))
ppm %>%
group_by(variable) %>%
summarise(mean = mean(value))
ppm %>%
group_by(variable) %>%
summarise(mean = mean(value),
sd = sd(value))
anova(lake)
price <- data.frame(acm1 = c(15.5, 14.3, 16.3, 13.5, 15.7, 16.4, 14.7),
acm2 = c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4),
acm3 = c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8)) %>% melt()
ppm %>%
group_by(variable) %>%
summarise(mean = mean(value),
sd = sd(value))
price %>%
group_by(variable) %>%
summarise(mean = mean(value),
sd = sd(value))
# 2. 판정
ag_market <- lm(value ~ variable, data=price)
anova(ag_market)
# 2. 판정
anova(lm(value ~ variable, data=price))
# 2. 판정
anova(lm(value ~ variable, data=price))
# 2. 판정
anova(lm(value ~ variable, data=price))
price %>%
group_by(variable) %>%
summarise(mean = mean(value),
sd = sd(value))
price <- data.frame(v1 = c(15.5, 14.3, 16.3, 13.5, 15.7, 16.4, 14.7),
v2 = c(14.7, 16.3, 15.5, 15.2, 16.3, 13.5, 15.4),
v3 = c(15.5, 13.2, 16.5, 15.7, 15.3, 15.2, 14.8)) %>% melt()
# 2. 판정
anova(lm(value ~ variable, data=price))
price %>%
group_by(variable) %>%
summarise(mean = mean(value),
sd = sd(value))
# 2. 판정
anova(lm(value ~ variable, data=price))
chisq.test(16, p=0.15)
chisq.test(c(85,15), p=0.15)
80*0.85
80*0.15
x <- c(64, 16)
chisq.test(x, p=c(0.85,0.15))
x <- c(16,12)
chisq.test(x, p=0.15)
chisq.test(x, p=c(16/80,0.15))
chisq.test(x, p=c(0.15,0.15))
chisq.test(x, p=c(85,15)/100)
c(85,15)/100)
c(85,15)
c(85,15)/100
x <- c(64, 16)
chisq.test(x, p=c(85,15)/100)
smoke <- data.frame(two_up = c(23,31,13,67),
one_down = c(21, 48, 23, 92),
no = c(63, 159, 119, 341))
smoke <- data.frame(two_up = c(23,31,13,67),
one_down = c(21, 48, 23, 92),
no = c(63, 159, 119, 341)) %>% row.names(c("두병 이상","한병 이하"))
smoke
smoke <- data.frame(two_up = c(23,31,13),
one_down = c(21, 48, 23),
no = c(63, 159, 119)) %>% row.names(c("두병 이상","한병 이하","못마심"))
smoke <- data.frame(two_up = c(23,31,13),
one_down = c(21, 48, 23),
no = c(63, 159, 119)) %>% row.names(c("두병 이상","한병 이하","못마심"))
smoke <- data.frame(two_up = c(23,31,13),
one_down = c(21, 48, 23),
no = c(63, 159, 119))
row.names(smoke) <- c("두병 이상","한병 이하","못마심")
smoke <- data.frame(two_up = c(23,31,13),
one_down = c(21, 48, 23),
no = c(63, 159, 119))
row.names(smoke) <- c("두병 이상","한병 이하","못마심")
smoke
smoke <- data.frame(two_up = c(23,31,13, 67),
one_down = c(21, 48, 23, 92),
no = c(63, 159, 119, 341),
r_total = c(107, 238, 155, 500))
row.names(smoke) <- c("두병 이상","한병 이하","못마심", "계")
smoke
c.tab <- table(sns.c$age.c, sns.c$service.c)
c.tab
c.tab <- table(sns.c$age.c, sns.c$service.c); str(c.tab)
ucba.tab <- apply(UCBAdmissions, c(1,2), sum)
ucba.tab
chisq.test(ucba.tab, correct = F) # 예이츠 보정의 목적은 통계적 유의성을 과대 평가하는 것을 막기 위한 것으로 (특히 표본수가 작은 경우) 기본이 보정을 하는 것으로 되어 있습니다. 만약 하지 않으려면 correct=F의 옵션을 주면 됩니다.
ucba.tab <- apply(UCBAdmissions, c(1,2), sum)
ucba.tab
str(UCBAdmissions)
UCBAdmissions
ucba.tab
smoke
# 2. 판정
chisq.test(smoke[1:3,1:3], correct = F)
smoke[1:3,1:3]
str(ucba.tab)
# 2. 판정
chisq.test(smoke[1:3,1:3], correct = F)
# 2. 판정
chisq.test(smoke[1:3,1:3], correct = F)
