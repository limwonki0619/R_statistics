legend.position = "none"))
# 테스트 2
ggplot(data,aes(x=V2, fill=cut(..x..,9))) + # x축을 기준으로 그리기
geom_histogram(color="black", breaks = seq(0,90,10), closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
stat_bin(breaks = seq(0,90,10),
closed =  "left", geom = "text", aes(label=paste0(..count..,"명")), vjust=-1, color="grey20", family = "hanna") +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) + # 색상 지정
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=15)) +
theme(axis.text.y = element_blank(),
legend.position = "none")
# 테스트 1
ggplot(data,aes(x=V2)) +
geom_histogram(aes(x=V2,fill=..x..),color="black",breaks = seq(0,90,10), closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
stat_bin(breaks = seq(0,90,10),
closed =  "left", geom = "text", aes(label=paste0(..count..,"명")), vjust=-1, color="grey20", family = "hanna") +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=15)) +
theme(axis.text.y = element_blank()) +
scale_fill_gradient(low = "hotpink", high = "royalblue")
# 테스트 2
ggplot(data,aes(x=V2, fill=cut(..x..,9))) + # x축을 기준으로 9등븐 후 색상 채우기
geom_histogram(color="black", breaks = seq(0,90,10), closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
stat_bin(breaks = seq(0,90,10),
closed =  "left", geom = "text", aes(label=paste0(..count..,"명")), vjust=-1, color="grey20", family = "hanna") +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) + # 색상 지정
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=15)) +
theme(axis.text.y = element_blank(),
legend.position = "none")
hist(data$V2, main = "연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, breaks = c(seq(0,90,10)), right=F,    # right = F 옵션으로 왼쪽이 닫히고, 오른쪽이 열린 그래프 (0~90)
main = "연령별분포", xlab="연령", ylab="빈도") # 빈도로 나타냄
# 테스트 2
ggplot(data,aes(x=V2, fill=cut(..x..,9))) + # x축을 기준으로 막대기 9등븐 후 색상 채우기
geom_histogram(breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) + # breaks : x축 0~90까지 10씩 조정, closed
scale_x_continuous(breaks = c(seq(0,90,10))) + # X축 설정
stat_bin(breaks = seq(0,90,10),
closed =  "left", geom = "text", aes(label=paste0(..count..,"명")), vjust=-1, color="grey20", family = "hanna") +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) + # 색상 직접 지정
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=15)) +
theme(axis.text.y = element_blank(),
legend.position = "none")
ggplot(data, aes(x=V2)) +
geom_histogram(color="black", fill="lightpink", breaks = seq(0,90,10), closed = "left") +
scale_x_continuous(breaks = c(seq(0,90,10))) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=15)) +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",
aes(label=paste0(..count..,"명")),
vjust=-1,
color="grey20", family = "hanna") +
theme(axis.text.y = element_blank())
# 히스토그램 : geom_hist : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +               # x축을 기준으로 막대기 9등븐 후 색상 채우기
geom_histogram(breaks = seq(0,90,10),                   # breaks : x축 0~90까지 10씩 조정, closed
color="black",                           # 막대기 색상 지정
closed = "left",
alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +          # X축 설정
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",
aes(label=paste0(..count..,"명")),
vjust=-1, color="grey20",
family = "hanna") +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) + # 색상 직접 지정
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=15)) +
theme(axis.text.y = element_blank(),
legend.position = "none")
# x : 히스토그램을 그릴 벡터
# breaks : 계급구간의 점을 나타내는 벡터로 계급의 경계를 지정, 4가지 방법이 존재
# nclass : 계급구간의 개수 지정
table(data$V2)
# x : 히스토그램을 그릴 벡터
# breaks : 계급구간의 점을 나타내는 벡터로 계급의 경계를 지정, 4가지 방법이 존재
# nclass : 계급구간의 개수 지정
sum(table(data$V2)[0:10])
sum(table(data$V2)[0:11])
sum(table(data$V2)[11:20])
hist(data$V2, main = "연령별 분포", xlab="연령", ylab="빈도")
hist(data$V2, breaks = c(seq(0,90,10)), right=F,    # right = F 옵션으로 왼쪽이 닫히고, 오른쪽이 열린 그래프 (0~90)
main = "연령별분포", xlab="연령", ylab="빈도") # 빈도로 나타냄
hist(data$V2, breaks = c(seq(0,90,10)), right=T,    # right = F 옵션으로 왼쪽이 닫히고, 오른쪽이 열린 그래프
main = "연령별분포", xlab="연령", ylab="빈도") # 빈도로 나타냄
hist(data$V2, breaks = c(seq(0,90,10)), right=F,    # right = F 옵션으로 왼쪽이 닫히고, 오른쪽이 열린 그래프 (0~90)
main = "연령별분포", xlab="연령", ylab="빈도") # 빈도로 나타냄
hist(data$V2, breaks = c(seq(0,90,10)), right=T,    # right = F 옵션으로 왼쪽이 닫히고, 오른쪽이 열린 그래프
main = "연령별분포", xlab="연령", ylab="빈도") # 빈도로 나타냄
?hist
hist(data$V2, breaks = c(seq(0,90,10)), right=F,    # right = F 옵션으로 왼쪽이 닫히고, 오른쪽이 열린 그래프 (0~90)
main = "연령별분포", xlab="연령", ylab="빈도") # 빈도로 나타냄
sum(table(data$V2)[11:20])
table(data$V2)[1]
table(data$V2)[0]
table(data$V2)[1]
sum(table(data$V2)[1:10])  # left closed 했을때
sum(table(data$V2)[1:11])  # left closed 안했을때 0초과 11이하
hist(data$V2, breaks = c(seq(0,90,10)), right=T,    # right = T 옵션으로 각 구간의 왼쪽이 열리고, 오른쪽이 닫힌 그래프
main = "연령별분포", xlab="연령", ylab="빈도") # 빈도로 나타냄
sum(table(data$V2)[1:10])  # 1~10번째 값 == right=F값
sum(table(data$V2)[1:11])  # 1~11번째 값 == right=T값
sum(table(data$V2)[11:20]) # 11~20번째 값 == 10이상 ~미만
sum(table(data$V2)[12:20])
sum(table(data$V2)[12:21])
sum(table(data$V2)[22:31])
sum(table(data$V2)[82:91])
sum(table(data$V2)[82:90])
sum(table(data$V2)[82:89])
sum(table(data$V2)[82:91],na.rm = T)
sum(table(data$V2)[2:11])  # 1~11번째 값 == hist(right=T값) == ggplot(closed=left값) == 왼쪽이 열리고, 오른쪽이 닫힘 == ~초과 ~이하
sum(table(data$V2)[1:11])  # 1~11번째 값 == hist(right=T값) == ggplot(closed=left값) == 왼쪽이 열리고, 오른쪽이 닫힘 == ~초과 ~이하
seq(0,90,10)
sum(table(data$V2)[10:20])
sum(table(data$V2)[11:20])
table(data$V2)[81:90]
# 히스토그램 : geom_hist : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +               # x축을 기준으로 막대기 9등븐 후 색상 채우기
geom_histogram(breaks = seq(0,90,10),                   # breaks : 계급구간 설정, x축 0~90까지 10씩 조정
color="black",                           # 막대기 테두리 색상 지정
closed = "left",                         # 왼쪽을 포함한다 == [0, 10) == (0 <= x < 10)
alpha = 0.8) +                           # 투명도 설정
scale_x_continuous(breaks = c(seq(0,90,10))) +          # X축 설정
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                 # text 만들기
aes(label=paste0(..count..,"명")),             # text 위치지정
vjust=-1,                                      # text 위치지정
color="grey20",                                # text 색상 지정
family = "hanna") +                            # text 폰트 지정
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) + # 막대 색상 직접 지정
theme_bw(base_family = "dohyeon", base_size = 15) +   # 이후 테마적용
labs(title = "연령별 분포", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=15)) +
theme(axis.text.y = element_blank(),
legend.position = "none")
# 히스토그램 : geom_hist : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +               # x축을 기준으로 막대기 9등븐 후 색상 채우기
geom_histogram(breaks = seq(0,90,10),                   # breaks : 계급구간 설정, x축 0~90까지 10씩 조정
color="black",                           # 막대기 테두리 색상 지정
closed = "left",                         # 왼쪽을 포함한다 == [0, 10) == (0 <= x < 10)
alpha = 0.8) +                           # 투명도 설정
scale_x_continuous(breaks = c(seq(0,90,10))) +          # X축 설정
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                 # text 만들기
aes(label=paste0(..count..,"명")),             # text 위치지정
vjust=-1,                                      # text 위치지정
color="grey20",                                # text 색상 지정
family = "hanna") +                            # text 폰트 지정
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) + # 막대 색상 직접 지정
theme_bw(base_family = "dohyeon", base_size = 15) +   # 이후 테마적용
labs(title = "연령별 분포 히스토그램", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.text.y = element_blank(),
legend.position = "none")
sum(table(data$V2)[2:11])  # 1~11번째(0 < x <= 10) 값 == hist(right=T값) == ggplot(closed=left값) == 왼쪽을 포함하지 않음, 오른쪽을 포함 == ~초과 ~이하
sum(table(data$V2)[1:11])  # 1~11번째(0 < x <= 10) 값 == hist(right=T값) == ggplot(closed=left값) == 왼쪽을 포함하지 않음, 오른쪽을 포함 == ~초과 ~이하
sum(table(data$V2)[12:21]) # 11~20번째 값
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 히스토그램", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.text.y = element_blank(),
legend.position = "none")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 히스토그램", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 히스토그램", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2)
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
#geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2)
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="빈도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2)
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2)
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2) +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                                 # text 만들기
aes(label=paste0(..density..,"명")),                             # text 위치지정
vjust=-1,                                                      # text 위치지정
color="grey20",                                                # text 색상 지정
family = "hanna")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2) +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                                 # text 만들기
aes(label=..density..),                                        # text 위치지정
vjust=-1,                                                      # text 위치지정
color="grey20",                                                # text 색상 지정
family = "hanna")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2) +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                                 # text 만들기
aes(label=..x..),                                        # text 위치지정
vjust=-1,                                                      # text 위치지정
color="grey20",                                                # text 색상 지정
family = "hanna")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2) +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                                 # text 만들기
aes(label=..density..),                                        # text 위치지정
vjust=-1,                                                      # text 위치지정
color="grey20",                                                # text 색상 지정
family = "hanna")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2) +
stat_density(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                                 # text 만들기
aes(label=..density..),                                        # text 위치지정
vjust=-1,                                                      # text 위치지정
color="grey20",                                                # text 색상 지정
family = "hanna")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2) +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",                                                 # text 만들기
aes(label=..density..),                                        # text 위치지정
vjust=-1,                                                      # text 위치지정
color="grey20",                                                # text 색상 지정
family = "hanna")
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",
aes(label=..density..),
vjust=-1,
color="grey20",
family = "hanna") +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2)
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2)
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
stat_bin(breaks = seq(0,90,10),
closed =  "left",
geom = "text",
aes(label=..density..),
vjust=-1,
color="grey20",
family = "hanna") +
geom_density(fill="Coral", alpha = 0.2)
# 히스토그램 : geom_hist 밀도  : 직접 색상 지정
ggplot(data,aes(x=V2, fill=cut(..x..,9))) +
geom_histogram(aes(y=..density..), breaks = seq(0,90,10), color="black", closed = "left", alpha = 0.8) +
scale_x_continuous(breaks = c(seq(0,90,10))) +
scale_fill_discrete(h = c(180, 360), c = 150, l = 80) +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "연령별 분포 밀도 히스토그램", x="연령", y="밀도") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none") +
geom_density(fill="Coral", alpha = 0.2)
table(data$학력
table(data$학력)
table(data$학력)
edu <- data.frame(table(data$학력))
edu
ggplot(edu, aes(x=Var1,y=Freq, fill=Var1)) +
geom_bar(stat = "identitu", width = 1)
ggplot(edu, aes(x=Var1,y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1)
ggplot(edu, aes(x=Var1,y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill")
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill")
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar()
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y")
ggplot(data, aes(x=학력)) +
geom_bar() +
coord_polar()
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar()
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y")
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y", xlim=c(0,4))
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y", xlim(c(0,4)))
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y") +
xlim(c(0,4))
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y")
ggplot(edu, aes(y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y")
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y")
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y")
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1) +
coord_polar(theta = "y")
ggplot(edu, aes(x="",y=Freq, fill=Var1)) +
geom_bar(stat = "identity", width = 1, position = "fill") +
coord_polar(theta = "y")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "학력수준별 비중", x="학력수준") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "학력수준별 비중") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(legend.position = "none")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "학력수준별 비중") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.title = element_blank(),
axis.text = element_blank()) +
theme(legend.position = "none")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_bw(base_family = "dohyeon", base_size = 15) +
labs(title = "학력수준별 비중") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.title = element_blank(),
axis.text.y = element_blank()) +
theme(legend.position = "none")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_bw(base_family = "dohyeon", base_size = 14) +
labs(title = "학력수준별 비중") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.title = element_blank(),
axis.text.y = element_blank()) +
theme(legend.position = "none")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_bw(base_family = "jalnan", base_size = 14) +
labs(title = "학력수준별 비중") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.title = element_blank(),
axis.text.y = element_blank()) +
theme(legend.position = "none")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_classic(base_family = "jalnan", base_size = 14) +
labs(title = "학력수준별 비중") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.title = element_blank(),
axis.text.y = element_blank()) +
theme(legend.position = "none")
ggplot(data, aes(x=학력,fill=학력)) +
geom_bar() +
coord_polar() +
theme_bw(base_family = "jalnan", base_size = 14) +
labs(title = "학력수준별 비중") +
theme(plot.title = element_text(face = "bold", hjust=0.5, size=20)) +
theme(axis.title = element_blank(),
axis.text.y = element_blank()) +
theme(legend.position = "none")
